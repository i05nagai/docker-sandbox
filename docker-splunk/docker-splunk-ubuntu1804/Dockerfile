FROM splunk/splunk

# FROM ubuntu:18.04
# 
# ARG SPLUNK_BUILD_URL
# COPY splunk/common-files/make-minimal-exclude.py /tmp
# 
# RUN \
#     python /tmp/make-minimal-exclude.py ${SPLUNK_BUILD_URL} > /tmp/splunk-minimal-exclude.list
#     && curl -L -o /tmp/splunk.tgz ${SPLUNK_BUILD_URL}
# RUN curl -L -o /tmp/splunk.tgz.md5 ${SPLUNK_BUILD_URL}.md5
# RUN test $(md5sum /tmp/splunk.tgz | sed 's,\([a-z0-9]*\).*,\1,') = $(cat /tmp/splunk.tgz.md5 | sed 's,MD5.*=.\([a-z0-9]*\).*,\1,')
# 
# RUN mkdir -p /minimal/splunk/var /extras/splunk/var
# RUN tar -C /minimal/splunk --strip 1 --exclude-from=/tmp/splunk-minimal-exclude.list -zxf /tmp/splunk.tgz
# RUN tar -C /extras/splunk --strip 1 --wildcards --files-from=/tmp/splunk-minimal-exclude.list -zxf /tmp/splunk.tgz
# 
# RUN mv /minimal/splunk/etc /minimal/splunk-etc
# RUN mv /extras/splunk/etc /extras/splunk-etc
# RUN mkdir -p /minimal/splunk/etc /minimal/splunk/share/splunk/search_mrsparkle/modules.new
# COPY splunk/common-files/apps /extras/splunk-etc/apps/
# 
# LABEL maintainer="support@splunk.com"
# ENV SPLUNK_HOME=/opt/splunk \
#     SPLUNK_GROUP=splunk \
#     SPLUNK_USER=splunk
# ENV TMPSPLUNKDIR=${SPLUNK_HOME}/tmp
# ENV TMPETCDIR=${TMPSPLUNKDIR}/etc
# 
# RUN sed -i -e 's/%sudo\s\+ALL=(ALL\(:ALL\)\?)\s\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers \
#     && sudo echo -e '\nansible ALL=(splunk)NOPASSWD:ALL' >> /etc/sudoers \
#     # Create the ansible user/group
#     && groupadd -r ${ANSIBLE_GROUP} \
#     && useradd -r -m -g ${ANSIBLE_GROUP} ${ANSIBLE_USER} \
#     && usermod -aG sudo ${ANSIBLE_USER} \
#     # Container Artifact Directory is a place for all artifacts and logs that are generated by the provisioning process. The directory is owned by the user "ansible".
#     && mkdir ${CONTAINER_ARTIFACT_DIR} \
#     && chown -R ${ANSIBLE_USER}:${ANSIBLE_GROUP} $CONTAINER_ARTIFACT_DIR \
#     && chmod -R 555 ${SPLUNK_ANSIBLE_HOME} \
#     && chmod -R 777 ${CONTAINER_ARTIFACT_DIR} \
#     && chmod 755 /sbin/entrypoint.sh /sbin/createdefaults.py /sbin/checkstate.sh
# 
# USER ${ANSIBLE_USER}
# HEALTHCHECK --interval=30s --timeout=30s --start-period=3m --retries=5 CMD /sbin/checkstate.sh || exit 1
# ENTRYPOINT [ "/sbin/entrypoint.sh" ]
# CMD [ "start-service" ]
